(()=>{"use strict";function e(){const o=document.querySelector("#my-themes");null!=o&&(o.innerHTML="",fetch("/api/v1/themes/get_owned",{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(console.log(e),e.json()))).then((n=>{if(null==n.success||0==n.success)throw new Error("Success field not found or unsuccessfull");if(null==n.message)throw new Error("No message field found");if(null==n.data)throw new Error("No data field found");const t=n.data;console.log(n.data),t.forEach(((n,t)=>{var l;l=o,fetch(`/api/v1/themes/get_info?theme=${n}`,{method:"GET",headers:{"Content-Type":"application/json"}}).then((e=>(console.log(e),e.json()))).then((o=>{if(null==o.message)throw new Error("No message field found");if(null==o.success||0==o.success)throw new Error(`${o.message}`);if(null==o.data)throw new Error("No data field found");const n=o.data.name,t=o.data.desc;if(null==n||null==t)return void console.error("Invalid theme data. Name or desc not found");const r=(new DOMParser).parseFromString('\n<div class="published-theme">\n    <h3 id="theme-name">THeme name</h3>\n    <p id="theme-desc">desc</p>\n    <button id="theme-del" class="normal-button">Delete</button>\n</div>\n',"text/html").body.firstElementChild;if(null==r)return;const s=r.querySelector("#theme-name"),c=r.querySelector("#theme-desc"),a=r.querySelector("#theme-del");null!=s&&null!=c&&null!=a?(s.textContent=n,c.textContent=t,a.addEventListener("click",(()=>{!function(o){fetch("/api/v1/themes/delete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:o})}).then((e=>(console.log(e),e.json()))).then((o=>{if(null==o.success||0==o.success)throw new Error("Success field not found or unsuccessfull");if(null==o.message)throw new Error("No message field found");console.log("Delete OK!"),alert("Delete OK"),e()})).catch((e=>{console.error("Error:",e),alert(`Failed to delete: ${e}`)}))}(n)})),l.appendChild(r)):console.error("One or many elements null")})).catch((e=>{console.error("Error:",e),alert(`Failed to process theme: ${e}`)}))}))})).catch((e=>{console.error("Error:",e),alert(`Failed to refresh listings: ${e}`)})))}window.onload=function(){console.log("Window loaded!"),function(){const o=document.querySelector("#publish-theme-btn"),n=document.querySelector("#theme-name"),t=document.querySelector("#theme-desc"),l=document.querySelector("#theme-data");null!=o&&null!=n&&null!=t&&null!=l?o.addEventListener("click",(o=>{o.preventDefault(),fetch("/api/v1/themes/publish",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({themeName:n.value,themeDescription:t.value,themeData:l.value})}).then((e=>(console.log(e),e.json()))).then((o=>{if(null==o.message)throw new Error("No message field found");if(null==o.success||0==o.success)throw new Error(`${o.message}`);console.log("Publish OK!"),alert("Publish OK"),e()})).catch((e=>{console.error("Error:",e),alert(`Failed to login: ${e}`)}))})):console.error("One or many elements are null")}(),e()}})();