(()=>{"use strict";({431:function(){var e=this&&this.__awaiter||function(e,o,n,t){return new(n||(n=Promise))((function(r,s){function l(e){try{c(t.next(e))}catch(e){s(e)}}function i(e){try{c(t.throw(e))}catch(e){s(e)}}function c(e){var o;e.done?r(e.value):(o=e.value,o instanceof n?o:new n((function(e){e(o)}))).then(l,i)}c((t=t.apply(e,o||[])).next())}))};let o="latest",n="";function t(t){return e(this,void 0,void 0,(function*(){const e=document.querySelector("#downloadFileName");null!=e&&(yield fetch(`/api/v1/versions/get_file?version=${t||o}`,{method:"GET"}).then((e=>(console.log(e),e.json()))).then((o=>{if(null==o.message)throw new Error("No message field found");if(null==o.success||0==o.success)throw new Error(`Failed. Message: ${o.message}`);console.log("Ok: got filename");const t=o.data;if(null==t)throw new Error("Server did not respond with data");e.innerHTML=`<strong>File name: </strong>${t}`,n=t})).catch((e=>{console.error("Error:",e),alert(`Failed to get version: ${e}`)})))}))}window.onload=function(){!function(){const e=document.querySelector("#downloadVersion");if(null==e)throw new Error("Select field not found!");fetch("/api/v1/versions/get",{method:"GET"}).then((e=>(console.log(e),e.json()))).then((n=>{if(null==n.message)throw new Error("No message field found");if(null==n.success||0==n.success)throw new Error(`Failed. Message: ${n.message}`);console.log("Ok: got versions");const r=n.data.versions;r.push("latest"),r.reverse();for(const o of r){const n=document.createElement("option");n.value=o,n.textContent=o,e.appendChild(n)}e.value=o,e.addEventListener("change",(function(){console.log("Changed!"),o=e.value,t()}))})).catch((e=>{console.error("Error:",e),alert(`Failed to refresh versions: ${e}`)}))}(),t(),function(){const e=document.querySelector("#version-download-btn");null!=e&&e.addEventListener("click",(function(){fetch(`/api/v1/versions/download?file=${n}`,{method:"GET"}).then((e=>(console.log(e),e.json()))).then((e=>{if(null==e.message)throw new Error("No message field found");if(null==e.success||0==e.success)throw new Error(`Failed. Message: ${e.message}`);console.log("Ok: got filename");const o=e.data;if(null==o)throw new Error("Server did not respond with data");window.open(o,"_blank")})).catch((e=>{console.error("Error:",e),alert(`Failed to get version: ${e}`)}))}))}()}}})[431]()})();